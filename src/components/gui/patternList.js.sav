"use strict";

var React = require('react');

var Pattern = require('./pattern');

var PatternList = React.createClass({
	propTypes: {
		patterns: React.PropTypes.array.isRequired,
		onPatternChange: React.PropTypes.func
	},

	handleRepeatsClick: function(pattern) {
		console.log("real handleRepeatsClick: ", pattern);
		//this.props.onPatternChange( pattern );
	},

	playPattern: function(e) { 
		console.log("playPattern: ", e);		
	},

	render: function() {

		var divStyle = {
			borderStyle: "solid", borderWidth: 1, borderRadius: "4%", borderColor: "#eee", padding: 4,
			background: "#fff", width: "100%"
		};
		var playPatternInner = function() {
			console.log("playPatternInner: ");
		};
		var createPattern = function(pattern) {
			var playButtStyle = {borderStyle: "none", background: "white"};
			var patternStateIcon = (pattern.playing) ? 'fa-stop' : 'fa-play';
			return (
				<div key={pattern.id} style={divStyle} disabled={true}>
				<button onClick={playPatternInner} style={playButtStyle}><i className="fa fa-play"></i></button>
				<Pattern pattern={pattern} />
				</div>
			);
		};
		return (
			<div style={{WebkitUserSelect: "none"}}>
				<button type="button">add pattern</button>
				<div>
					{this.props.patterns.map( createPattern )}
				</div>
			</div>

		);
	}


});

module.exports = PatternList;

		/*
		var createPattern = function(pattern) {
			return (
				<ListGroupItem key={pattern.id} >
				<button onClick={playPattern} style={{borderStyle: "none", background: "white"}}><i className="fa fa-play"></i></button>
				<span style={{display: "inline-block", width: 100, textAlign: "right", textOverflow: "ellipsis", whiteSpace: "no-wrap"}}>
					{pattern.name}</span>: {pattern.colors.map( createSwatch )}
				</ListGroupItem>
			);
		};		
		return (
			<div>
			<button type="button">add pattern</button>
			<ListGroup>
			{this.props.patterns.map( createPattern )}
			</ListGroup>
			</div>
		);*/
